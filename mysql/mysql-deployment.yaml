apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      # 初始化容器
      initContainers:
      - name: mysql-init
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_TEST_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-test-user-pwd
        command:
        - sh
        - "-c"
        - |
          set -ex
          rm -rf /var/lib/mysql/lost+found
          cat > /docker-entrypoint-initdb.d/mysql-testdb-init.sql << EOF
          create database testdb default character set utf8;
          grant all on testdb.* to 'test'@'%' identified by '$MYSQL_TEST_USER_PASSWORD';
          flush privileges;
          EOF
          cat > /docker-entrypoint-initdb.d/mysql-appdb-init.sql << EOF
          create table app(id int);
          insert into app values(1);
          commit;
          EOF
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-init
          mountPath: /docker-entrypoint-initdb.d

      # 常规容器
      containers:
      - name: mysql
        image: mysql:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-pwd
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-app-user-pwd
        - name: MYSQL_USER
          value: app
        - name: MYSQL_DATABASE
          value: appdb
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - "-c"
            - MYSQL_PWD="${MYSQL_ROOT_PASSWORD}"
            - mysql -h 127.0.0.1 -u root -e "SELECT 1"
          initialDelaySeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - "-c"
            - MYSQL_PWD="${MYSQL_ROOT_PASSWORD}"
            - mysql -h 127.0.0.1 -u root -e "SELECT 1"
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 1
          initialDelaySeconds: 10
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-data
        - mountPath: /etc/mysql/conf.d
          name: mysql-config
        - mountPath: /docker-entrypoint-initdb.d
          name: mysql-init
        # resources:
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        ports:
        - containerPort: 3306
      volumes:
      - name: mysql-config
        configMap:
          name: mysql-config
      - name: mysql-data
        hostPath:
          path: /Users/xie/Workspaces/data/mysql/data
      - name: mysql-init
        emptyDir:
            {}

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  type: NodePort
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
    nodePort: 30006
    protocol: TCP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  custom.cnf: | 
        [mysqld]
        default_storage_engine=innodb
        skip_external_locking
        lower_case_table_names=1
        skip_host_cache
        skip_name_resolve

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
data:
  mysql-root-pwd: TVMyMDE5MTIz
  mysql-app-user-pwd: TVMyMDE5MTIz
  mysql-test-user-pwd: TVMyMDE5MTIz



# kubectl exec -it mysql-858c665b85-ddj7g -- mysql -uroot -pMS2019123 -hmysql